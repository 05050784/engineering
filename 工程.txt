兩點間的距離
x1=input('x1=');
y1=input('y1=');
x2=input('x2=');
y2=input('y2=');
disc=sqrt([x1-x2]^2 + [y1-y2]^2)
disp(['The distance is ' num2str(disc)])

華氏換克氏
F=input('Enter degrees F:');
K=(F-32)*5/9+273.15;
fprintf('%0.2f degreeF = %0.2f degreesK\n', F, K)

例2.4
V=120
RS=50
RL=1:100;
I=V./(RS+RL);
PL=(I.^2).*RL;
plot(RL,PL)
title('power VS load resistance')
xlabel('RL')
ylabel('PL')
grid on


2.10 天線
L=0.25e-3
C=0.1e-9
f0=1./(2*pi*sqrt(L*C))
fprintf('f0=%.2f\n',f0)

公式
c=0.1e-9
l=0.25e-3
r=50
v0=10e-3
freq=(0.7:0.001:1.3)*1e6;
w=2*pi*freq;
v=v0.*r./sqrt(r^2+(w.*l-l./(w.*c)).^2);
plot(freq,v)
title('Plot of output voltage vs frequency');
xlabel('Frequency(HZ)');
ylabel('Voltage(v)');
grid on

一元二次方程式
disp('This program solves for the roots of a quadratic');
disp('equation of the form A*X^2+B*X+C=0');
a=input('Enter the coefficientA:');
b=input('Enter the coefficientB:');
c=input('Enter the coefficientC:');
discriminant=b^2-4*a*c;
if discriminant>0
x1=(-b+sqrt(discriminant))/(2*a);
x2=(-b-sqrt(discriminant))/(2*a);
disp('This equation has two real roots');
fprintf('x1=%f\n', x1);
fprintf('x2=%f\n', x2);
elseif discriminant==0
  x1=(-b)/(2*a);
  disp('This equation has two identical real roots:');
  fprintf('x1=x2=%f\n', x1);
else
  real_part=(-b)/(2*a);
  imag_part=sqrt(abs(discriminant))/(2*a);
  disp('This equation has complex roots:');
  fprintf('x1=%f+i%f\n', real_part, imag_part);
  fprintf('x1=%f-i%f\n',real_part, imag_part);
end

x和y
x=input('Enter the x coefficient:');
y=input('Enter the y coefficient:');
if x>=0 && y>=0
	fun=x+y;
elseif x>=0 && y<0
	fun=x+y^2;
elseif x<0 && y>=0
	fun=x^2+y;
else
	fun=x^2+y^2;
end

disp(['The value of the function is' num2str(fun)]);



R=16000; C=1.0E-6;    %1uf
f=1:2:1000;
res=1./(1+j*2*pi*f*R*C);
amp=abs(res);
phase=angle(res);
subplot(2,1,1);
loglog(f,amp);
title('Amplitude Response');
xlabel('Frequency(HZ)');
ylabel('Output/Input Ratio');
grid on;
subplot(2,1,2);
semilogx(f,phase);
title('Phase Response');
xlabel('Frequency(HZ)');
ylabel('Output-Input Phase(rad)');
grid on;

